
//Tomcat plugin for launching WPISuite easily?
buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.3'
    }
}

//Common dependencies
subprojects {
	apply plugin: 'eclipse'
	apply plugin: 'java'
	//apply plugin: 'tomcat'
    //apply plugin: 'war'

	//Java version 1.7
    sourceCompatibility = targetCompatibility = 1.7
	
	repositories {
		mavenCentral()
	}

	dependencies {
        compile 'commons-codec:commons-codec:1.7'
        compile 'commons-logging:commons-logging:1.1.1'
        compile 'org.apache.httpcomponents:httpcore:4.2.2'
		compile 'org.apache.httpcomponents:httpclient:4.2.2'
        compile 'com.fasterxml.jackson.core:jackson-annotations:2.1.1'
        compile 'com.fasterxml.jackson.core:jackson-core:2.1.2'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.1.0'
        
        //runtime files('libs/a.jar', 'libs/b.jar')
        compile fileTree(dir: rootDir.toString()+'/libs', includes: ['*.jar']) //db4o jar that isn't on Maven, and any other new dependencies

		testCompile 'junit:junit:4.8.2'
        //Add mockito? easymock? cucumber??? code coverage???
	}
    
    eclipse{
        classpath{
            downloadSources = true
            downloadJavadoc = true //This is false otherwise, we love to read JavaDoc to help use understand libraries :)
        }
    }
    
    //Gradle looks for source code by default in diff dirs. More info: http://www.gradle.org/docs/current/userguide/java_plugin.html#N12119
    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            
            //Will we use this ever?
            resources {
                srcDir 'resources'
            }
        }
        
        test {
            java {
                srcDirs 'test'
            }
        }
    }
}





//To make sure there is a script people can double click to install Gradle
task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}